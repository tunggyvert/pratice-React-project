import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { toast } from 'react-toastify';

const UserReport = () => {
  const [title, setTitle] = useState('');
  const [detail, setDetail] = useState('');
  const [reports, setReports] = useState([]);
  const [roomNumber, setRoomNumber] = useState(null);
  const token = localStorage.getItem('token');

  // ‚úÖ ‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  const fetchRoomNumber = async () => {
    try {
      const res = await axios.get('http://localhost:4000/me', {
        headers: { Authorization: `Bearer ${token}` }
      });
      const activeContract = res.data.find(c => c.status === 'active');
      if (activeContract) {
        setRoomNumber(activeContract.room.roomNumber);
      } else {
        toast.warn('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ä‡πà‡∏≤‡∏≠‡∏¢‡∏π‡πà', { theme: 'colored' });
      }
    } catch (err) {
      toast.error('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÑ‡∏î‡πâ', { theme: 'colored' });
      console.error(err);
    }
  };

  // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á
  const fetchReports = async (roomNum) => {
    try {
      const res = await axios.get(`http://localhost:4000/reports/${roomNum}`, {
        headers: { Authorization: `Bearer ${token}` }
      });
      setReports(res.data);
    } catch (err) {
      console.error(err);
    }
  };

  useEffect(() => {
    fetchRoomNumber();
  }, []);

  useEffect(() => {
    if (roomNumber) {
      fetchReports(roomNumber);
    }
  }, [roomNumber]);

  const handleSubmit = async () => {
    if (!title || !detail) return alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö');

    try {
      await axios.post('http://localhost:4000/reports/create', {
        roomNumber,
        title,
        detail
      }, {
        headers: { Authorization: `Bearer ${token}` }
      });

      toast.success('‚úÖ ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', { theme: 'colored' });
      setTitle('');
      setDetail('');
      fetchReports(roomNumber); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á
    } catch (err) {
      toast.error('‚ùå ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', { theme: 'colored' });
    }
  };

  return (
    <div className="p-6 max-w-xl mx-auto">
      <h2 className="text-2xl font-bold mb-4">üìù ‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å</h2>

      <input
        type="text"
        placeholder="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
        className="border p-2 rounded w-full mb-3"
        value={title}
        onChange={(e) => setTitle(e.target.value)}
      />
      <textarea
        placeholder="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤"
        className="border p-2 rounded w-full mb-3"
        rows="4"
        value={detail}
        onChange={(e) => setDetail(e.target.value)}
      />

      <button
        className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        onClick={handleSubmit}
        disabled={!roomNumber}
      >
        ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á
      </button>

      {/* ‚úÖ ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á */}
      <div className="mt-8">
        <h3 className="text-xl font-semibold mb-3">üìã ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h3>

        {reports.length > 0 ? (
          reports.map(report => (
            <div key={report._id} className="mb-4 p-3 border rounded-lg shadow-sm">
              <p><strong>‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠:</strong> {report.title}</p>
              <p><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong> {report.detail}</p>
              <p>
                <strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> 
                <span className={
                  report.status === 'resolved' ? 'text-green-600 font-bold' :
                  report.status === 'pending' ? 'text-yellow-600 font-bold' :
                  report.status === 'rejected' ? 'text-red-600 font-bold' :
                  'text-gray-600'
                }>
                  {report.status === 'resolved' && '‚úÖ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß'}
                  {report.status === 'pending' && '‚è≥ ‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'}
                  {report.status === 'rejected' && '‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò'}
                </span>
              </p>
            </div>
          ))
        ) : (
          <p className="text-gray-600">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏£‡πâ‡∏≠‡∏á‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ</p>
        )}
      </div>
    </div>
  );
};

export default UserReport;
