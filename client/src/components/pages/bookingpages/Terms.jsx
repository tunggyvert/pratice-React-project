import React, { useState } from 'react';
import { useNavigate, useLocation } from 'react-router-dom';

const Terms = () => {
  const [accepted, setAccepted] = useState(false);
  const [selectedTerm, setSelectedTerm] = useState(null);
  const navigate = useNavigate();
  const location = useLocation();

  const room = location.state?.room;

  if (!room) return <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á</p>;

  const leaseTermsOptions = [6, 10, 12]; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
  const monthlyRent = parseInt(room.price.replace(/[^\d]/g, '')); // ‡∏î‡∏∂‡∏á‡πÄ‡∏•‡∏Ç‡∏à‡∏≤‡∏Å "7,500/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô"
  const totalPrice = selectedTerm ? monthlyRent * selectedTerm : 0;

  const handleTermSelection = (term) => {
    setSelectedTerm(selectedTerm === term ? null : term);
  };

  const handleNext = () => {
    if (!accepted || !selectedTerm) return;
    navigate('/book-process/step4', {
      state: {
        room,
        contract: {
          months: selectedTerm,
          totalPrice,
          monthlyRent,
          startDate: new Date()
        }
      }
    });
  };

  return (
    <div className="p-6 max-w-2xl mx-auto">
      <h2 className="text-2xl font-bold text-center mb-4">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏ä‡πà‡∏≤</h2>
      <div className="bg-white p-4 rounded-lg shadow-md">
        <ul className="list-none space-y-2 text-gray-700">
          {leaseTermsOptions.map((term) => (
            <li key={term} className="flex items-center space-x-2">
              <input
                type="checkbox"
                value={term}
                checked={selectedTerm === term}
                onChange={() => handleTermSelection(term)}
                className="w-5 h-5"
              />
              <span>{term} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</span>
            </li>
          ))}
        </ul>
        {selectedTerm && (
          <div className="mt-4 text-blue-600 font-medium">
            üí∞ ‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤ {selectedTerm} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô: {totalPrice.toLocaleString()} ‡∏ö‡∏≤‡∏ó
          </div>
        )}
      </div>

      <h2 className="text-2xl font-bold text-center mt-6">‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å</h2>
      <div className="bg-white p-4 rounded-lg shadow-md">
        <ul className="list-decimal pl-5 space-y-2 text-gray-700">
          <li>‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏Ñ‡πà‡∏≤‡πÄ‡∏ä‡πà‡∏≤‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</li>
          <li>‡∏´‡πâ‡∏≤‡∏°‡∏ô‡∏≥‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏±‡∏Å‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï</li>
          <li>‡∏Ñ‡πà‡∏≤‡∏ô‡πâ‡∏≥ 10 ‡∏ö‡∏≤‡∏ó/‡∏´‡∏ô‡πà‡∏ß‡∏¢ ‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü 8 ‡∏ö‡∏≤‡∏ó/‡∏´‡∏ô‡πà‡∏ß‡∏¢</li>
          <li>‡∏´‡πâ‡∏≤‡∏°‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 22:00 - 07:00 ‡∏ô.</li>
          <li>‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡∏•‡πà‡∏ß‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 30 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏¢‡πâ‡∏≤‡∏¢‡∏≠‡∏≠‡∏Å</li>
        </ul>
        <div className="mt-4 flex items-center">
          <input
            type="checkbox"
            id="accept"
            className="w-5 h-5"
            checked={accepted}
            onChange={() => setAccepted(!accepted)}
          />
          <label htmlFor="accept" className="ml-2 text-gray-700 cursor-pointer">
            ‡∏â‡∏±‡∏ô‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πà‡∏≤
          </label>
        </div>
      </div>

      <div className="mt-6 flex justify-between">
        <button className="bg-gray-500 text-white px-6 py-2 rounded-lg" onClick={() => navigate(-1)}>
          ‡∏Å‡∏•‡∏±‡∏ö
        </button>
        <button
          className={`px-6 py-2 rounded-lg ${
            accepted && selectedTerm ? "bg-blue-500 text-white" : "bg-gray-300 text-gray-500 cursor-not-allowed"
          }`}
          onClick={handleNext}
          disabled={!accepted || !selectedTerm}
        >
          ‡πÑ‡∏õ‡∏ï‡πà‡∏≠
        </button>
      </div>
    </div>
  );
};

export default Terms;
